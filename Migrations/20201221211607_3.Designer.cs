// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkFlow.Context;

namespace WorkFlow.Migrations
{
    [DbContext(typeof(WFContext))]
    [Migration("20201221211607_3")]
    partial class _3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("WorkFlow.Entities.WF", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CurrentProgressNumberWFStep")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WFStatusId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WFStatusId");

                    b.ToTable("WorkFlows");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CurrentProgressNumberWFStep = 0,
                            Name = "Add User",
                            WFStatusId = 1
                        });
                });

            modelBuilder.Entity("WorkFlow.Entities.WFStatus", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("WFStatus");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Create"
                        },
                        new
                        {
                            ID = 2,
                            Name = "In Progress"
                        },
                        new
                        {
                            ID = 3,
                            Name = "Finished"
                        },
                        new
                        {
                            ID = 4,
                            Name = "Declined"
                        });
                });

            modelBuilder.Entity("WorkFlow.Entities.WFStep", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsFinal")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFirst")
                        .HasColumnType("bit");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("WFId")
                        .HasColumnType("int");

                    b.Property<int>("WFStatusId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WFId");

                    b.HasIndex("WFStatusId");

                    b.HasIndex("Number", "WFId")
                        .IsUnique();

                    b.ToTable("WFSteps");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            IsFinal = false,
                            IsFirst = true,
                            Number = 1,
                            WFId = 1,
                            WFStatusId = 1
                        },
                        new
                        {
                            ID = 2,
                            IsFinal = false,
                            IsFirst = false,
                            Number = 2,
                            WFId = 1,
                            WFStatusId = 1
                        },
                        new
                        {
                            ID = 3,
                            IsFinal = true,
                            IsFirst = false,
                            Number = 3,
                            WFId = 1,
                            WFStatusId = 1
                        });
                });

            modelBuilder.Entity("WorkFlow.Entities.WFTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WFId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("WFId");

                    b.ToTable("WFTasks");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "add name",
                            WFId = 1
                        },
                        new
                        {
                            ID = 2,
                            Description = "add gender",
                            WFId = 1
                        },
                        new
                        {
                            ID = 3,
                            Description = "add age",
                            WFId = 1
                        });
                });

            modelBuilder.Entity("WorkFlow.Entities.WF", b =>
                {
                    b.HasOne("WorkFlow.Entities.WFStatus", "WFStatus")
                        .WithMany()
                        .HasForeignKey("WFStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WFStatus");
                });

            modelBuilder.Entity("WorkFlow.Entities.WFStep", b =>
                {
                    b.HasOne("WorkFlow.Entities.WF", "WorkFlow")
                        .WithMany("WFSteps")
                        .HasForeignKey("WFId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("WorkFlow.Entities.WFStatus", "WFStatus")
                        .WithMany()
                        .HasForeignKey("WFStatusId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WFStatus");

                    b.Navigation("WorkFlow");
                });

            modelBuilder.Entity("WorkFlow.Entities.WFTask", b =>
                {
                    b.HasOne("WorkFlow.Entities.WF", "WorkFlow")
                        .WithMany("WFTasks")
                        .HasForeignKey("WFId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("WorkFlow");
                });

            modelBuilder.Entity("WorkFlow.Entities.WF", b =>
                {
                    b.Navigation("WFSteps");

                    b.Navigation("WFTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
